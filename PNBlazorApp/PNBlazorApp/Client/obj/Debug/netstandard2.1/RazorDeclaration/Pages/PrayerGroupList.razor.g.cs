#pragma checksum "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\Pages\PrayerGroupList.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "014efd7edd73725c5cc773e6db1ef804243e82fb"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace PNBlazorApp.Client.Pages
{
    #line hidden
    using System;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\_Imports.razor"
using PNBlazorApp.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\_Imports.razor"
using PNBlazorApp.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\Pages\PrayerGroupList.razor"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\Pages\PrayerGroupList.razor"
using System.Text;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\Pages\PrayerGroupList.razor"
using System.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\Pages\PrayerGroupList.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\Pages\PrayerGroupList.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\Pages\PrayerGroupList.razor"
using PNEntities;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/prayergrouplist")]
    public partial class PrayerGroupList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 95 "C:\Users\Robert\source\repos\PNTest\PNBlazorApp\PNBlazorApp\Client\Pages\PrayerGroupList.razor"
       

    private List<PrayerGroup> PrayerGroups;
    private PrayerGroup activePrayerGroup = new PrayerGroup();

    private string exceptionMessage;

    private string UpdateName = "";
    private string UpdateDescription = "";

    #region Page Events

    protected override async Task OnInitializedAsync()
    {
        PrayerGroups = await GetAllPrayerGroupsAsync();
    }

    #endregion

    #region UI Events

    #region Add Events

    private async Task Add_OnClick()
    {
        await JSRuntime.InvokeVoidAsync(
            "window.domMethods.showAddInputs", true);
    }

    private async Task AddCancel_OnClick()
    {
        await JSRuntime.InvokeVoidAsync(
            "window.domMethods.showAddInputs", false);
    }

    private async Task AddOK_OnClick()
    {
        await JSRuntime.InvokeVoidAsync(
            "window.domMethods.showAddInputs", false);

        activePrayerGroup = await AddNewPrayerGroupAsync();

        PrayerGroups.Add(activePrayerGroup);
        PrayerGroups = PrayerGroups.OrderBy(pg => pg.PrayerGroupName).ToList();

        UpdateName = "";
        UpdateDescription = "";

        StateHasChanged();
    }

    #endregion

    #region Update Events

    private async Task Edit_OnClick(Guid Id)
    {
        activePrayerGroup = PrayerGroups.FirstOrDefault(p => p.Id == Id);

        await JSRuntime.InvokeVoidAsync(
       "window.domMethods.showUpdateInputs", Id.ToString(), activePrayerGroup.PrayerGroupName, activePrayerGroup.PrayerGroupDescription, true);
    }

    private async Task EditCancel_OnClick(Guid Id)
    {
        await JSRuntime.InvokeVoidAsync(
            "window.domMethods.showUpdateInputs", Id.ToString(), "", "", false);
    }

    private async Task Update_OnClick(Guid Id)
    {
        await JSRuntime.InvokeVoidAsync(
            "window.domMethods.showUpdateInputs", Id.ToString(), "", "", false);

        activePrayerGroup = await UpdatePrayerGroupAsync(Id);

        UpdateName = "";
        UpdateDescription = "";

        StateHasChanged();
    }

    #endregion

    #region Delete Events

    private async Task Delete(Guid Id)
    {
        activePrayerGroup = PrayerGroups.FirstOrDefault(p => p.Id == Id);

        await DeletePrayerGroupAsync(Id);

        PrayerGroups.Remove(activePrayerGroup);
        activePrayerGroup = new PrayerGroup();

        StateHasChanged();
    }

    #endregion

    #endregion

    #region Http Events

    private async Task<List<PrayerGroup>> GetAllPrayerGroupsAsync()
    {
        var response = await Http.GetAsync("PrayerGroup");

        string content = await response.Content.ReadAsStringAsync();

        List<PrayerGroup> prayerGroups = JsonConvert.DeserializeObject<List<PrayerGroup>>(content);
        return prayerGroups;
    }

    private async Task<PrayerGroup> AddNewPrayerGroupAsync()
    {
        var prayerGroup = new PrayerGroup
        {
            Id = Guid.NewGuid(),
            PrayerGroupName = UpdateName,
            PrayerGroupDescription = UpdateDescription,
            DateCreated = DateTime.UtcNow,
            DateLastModified = DateTime.UtcNow
        };

        var stringContent = new StringContent(JsonConvert.SerializeObject(prayerGroup), Encoding.UTF8, "application/json");

        var response = await Http.PostAsync("PrayerGroup", stringContent);

        string content = await response.Content.ReadAsStringAsync();
        return JsonConvert.DeserializeObject<PrayerGroup>(content);
    }


    private async Task<PrayerGroup> UpdatePrayerGroupAsync(Guid Id)
    {
        var prayerGroup = PrayerGroups.FirstOrDefault(p => p.Id == Id);

        // TODO: Explore more about binding.  
        // The code below is required because the current implementation does
        // not update the bound field if the user does not modify the existing entry.
        if (UpdateName.Length == 0)
        {
            UpdateName = prayerGroup.PrayerGroupName;
        }
        if (UpdateDescription.Length == 0)
        {
            UpdateDescription = prayerGroup.PrayerGroupDescription;
        }

        prayerGroup.PrayerGroupName = UpdateName;
        prayerGroup.PrayerGroupDescription = UpdateDescription;
        prayerGroup.DateLastModified = DateTime.UtcNow;

        var stringContent = new StringContent(JsonConvert.SerializeObject(prayerGroup), Encoding.UTF8, "application/json");

        var response = await Http.PutAsync("PrayerGroup", stringContent);

        string content = await response.Content.ReadAsStringAsync();
        return JsonConvert.DeserializeObject<PrayerGroup>(content);

    }


    // TODO:  Fix WebApi Code to return a bool
    private async Task<PrayerGroup> DeletePrayerGroupAsync(Guid Id)
    {
        var route = "PrayerGroup/" + Id;
        var response = await Http.DeleteAsync(route);
        return null;
    }

    #endregion

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591
